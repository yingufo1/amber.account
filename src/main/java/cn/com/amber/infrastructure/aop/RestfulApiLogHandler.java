package cn.com.amber.infrastructure.aop;import lombok.extern.slf4j.Slf4j;import org.aspectj.lang.ProceedingJoinPoint;import org.springframework.util.StopWatch;/** * Restful * * @author yangying * @version 1.0 * @since 2022/9/25 **/@Slf4jpublic class RestfulApiLogHandler extends ApiLogHandler{    @Override    public Object proceed(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {        StopWatch stopWatch = new StopWatch();        log.info("收到请求:{},{},{}...",proceedingJoinPoint.getArgs());        stopWatch.start();        Object retVal = proceedingJoinPoint.proceed();        stopWatch.stop();        if(retVal.getClass().isPrimitive() || retVal instanceof String){            log.info("处理完成，共耗时{}ms,返回结果{}",stopWatch.getTotalTimeMillis(),retVal);;        }else{            logConvertToJsonInfo(retVal,"处理完成，共耗时{}ms,返回结果{}"                    ,"结果转换失败,无法打印返回结果.耗时:{}ms",stopWatch.getTotalTimeMillis());        }        return retVal;    }}