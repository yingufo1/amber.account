package cn.com.amber.infrastructure.aop;import lombok.extern.slf4j.Slf4j;import org.aspectj.lang.ProceedingJoinPoint;import org.aspectj.lang.Signature;import org.springframework.util.StopWatch;/** * 对api接口请求简单处理的日志处理器，只打印接口耗时 * * @author yangying * @version 1.0 * @since 2022/9/25 **/@Slf4jpublic class SimpleApiLogHandler extends ApiLogHandler{    @Override    public Object proceed(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {        Signature methodSignature = proceedingJoinPoint.getSignature();        String methodName = methodSignature.getDeclaringTypeName()+"."+methodSignature.getName();        log.warn("非标准或RESTFUL的API接口规范,请及时修改。接口:{}",methodName);        log.info("请求方法:{}",methodName);        StopWatch stopWatch = new StopWatch();        stopWatch.start();        Object revVal =  proceedingJoinPoint.proceed();        stopWatch.stop();        log.info("处理完成,耗时:{}ms",stopWatch.getTotalTimeMillis());        return revVal;    }}