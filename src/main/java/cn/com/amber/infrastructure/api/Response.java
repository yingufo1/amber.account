package cn.com.amber.infrastructure.api;import cn.com.amber.infrastructure.api.enums.ResponseCode;import lombok.Getter;import lombok.Setter;import java.io.Serializable;/** * 基础响应 * * @author yangying * @version 1.0 * @since 2022/9/14 **/@Getter@Setterpublic class Response<R> implements Serializable {    private String code;    private String resp;    private String reqId;    private R data;    private Response(String code, String resp) {        this.code = code;        this.resp = resp;    }    /**     * 获取成功响应     *     * @return 成功响应     */    public static Response<Void> SUCCESS() {        Response<Void> response = new Response<>("0000", "业务成功");        return response;    }    /**     * 获取成功响应     *     * @param data 响应结果，没有则为null     * @return 成功响应     */    public static <R> Response<R> SUCCESS(R data) {        Response<R> response = new Response<>("0000", "业务成功");        response.setData(data);        return response;    }    /**     * 获取失败响应     *     * @param responseCode 响应码     * @param args         格式化的参数，与响应码中的信息一起进行格式化     * @return 响应     */    public static Response<Void> FAIL(ResponseCode responseCode, Object... args) {        String message = String.format(responseCode.getMessage(), args);        return new Response<>(responseCode.getCode(), message);    }    /**     * 获取失败是的响应     *     * @param message      响应信息，不做格式化处理     * @param responseCode 响应码     * @return 响应     */    public static Response<Void> FAIL_WITH_MESSAGE(ResponseCode responseCode, String message) {        return new Response<>(responseCode.getCode(), message);    }    public static Response<Void> SYSTEM_ERROR() {        return new Response<>(ResponseCode.SYSTEM_ERROR.getCode(), ResponseCode.SYSTEM_ERROR.getMessage());    }}