spring.main.allow-bean-definition-overriding=true#mybatismybatis.config-location=classpath:/mybatis/mybatis-config.xmlmybatis.mapper-locations=classpath:/mapper/*.xml#shardingsphere# 数据源spring.shardingsphere.datasource.names=amber_ds_00,amber_ds_01#真实数据源amber_ds_00连接spring.shardingsphere.datasource.amber_ds_00.type=com.alibaba.druid.pool.DruidDataSourcespring.shardingsphere.datasource.amber_ds_00.url=${datasource.jdbc.amber_00.url}spring.shardingsphere.datasource.amber_ds_00.username=${datasource.jdbc.user}spring.shardingsphere.datasource.amber_ds_00.password=${datasource.jdbc.password}spring.shardingsphere.datasource.amber_ds_00.initial-size=5spring.shardingsphere.datasource.amber_ds_00.min-idle=5spring.shardingsphere.datasource.amber_ds_00.maxActive=20spring.shardingsphere.datasource.amber_ds_00.maxWait=60000spring.shardingsphere.datasource.amber_ds_00.timeBetweenEvictionRunsMillis=60000spring.shardingsphere.datasource.amber_ds_00.minEvictableIdleTimeMillis=300000spring.shardingsphere.datasource.amber_ds_00.validationQuery=SELECT 1spring.shardingsphere.datasource.amber_ds_00.testWhileIdle=truespring.shardingsphere.datasource.amber_ds_00.testOnBorrow=falsespring.shardingsphere.datasource.amber_ds_00.testOnReturn=falsespring.shardingsphere.datasource.amber_ds_00.poolPreparedStatements=truespring.shardingsphere.datasource.amber_ds_00.maxPoolPreparedStatementPerConnectionSize=20spring.shardingsphere.datasource.amber_ds_00.filters=stat,wall,log4j2spring.shardingsphere.datasource.amber_ds_00.connectionProperties=druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000#真实数据源amber_ds_01配置连接spring.shardingsphere.datasource.amber_ds_01.type=com.alibaba.druid.pool.DruidDataSourcespring.shardingsphere.datasource.amber_ds_01.url=${datasource.jdbc.amber_01.url}spring.shardingsphere.datasource.amber_ds_01.username=${datasource.jdbc.user}spring.shardingsphere.datasource.amber_ds_01.password=${datasource.jdbc.password}spring.shardingsphere.datasource.amber_ds_01.filters=stat,wall,log4j2spring.shardingsphere.datasource.amber_ds_01.connectionProperties=druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000# t_account真实表spring.shardingsphere.rules.sharding.tables.t_account.actual-data-nodes=amber_ds_00.t_account_000$->{0..1},amber_ds_01.t_account_000$->{2..3}#分片算法定义-根据库和表数量分片spring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForDB.type= CLASS_BASEDspring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForDB.props.strategy=STANDARDspring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForDB.props.algorithmClassName=cn.com.amber.configuration.DBHashCodeShardingAlgspring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForDB.props.dbCount = 2spring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForDB.props.tableCount = 4#分片算法定义-根据表数量分片spring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForTable.type= CLASS_BASEDspring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForTable.props.strategy=STANDARDspring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForTable.props.algorithmClassName=cn.com.amber.configuration.TableHashCodeShardingAlgspring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForTable.props.dbCount = 2spring.shardingsphere.rules.sharding.sharding-algorithms.hashcodeForTable.props.tableCount = 4# 主键生成序列算法定义spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE#默认分片和主键生成序列算法#默认分片主键spring.shardingsphere.rules.sharding.default-sharding-column= account_no#默认库分片算法spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=hashcodeForDB#默认表分片算法spring.shardingsphere.rules.sharding.default-table-strategy.standard.sharding-algorithm-name=hashcodeForTable#默认主键序列生成算法名spring.shardingsphere.rules.sharding.default-key-generate-strategy.key-generators-name=snowflakespring.shardingsphere.rules.sharding.tables.t_account.key-generate-strategy.column=id#spring.shardingsphere.rules.sharding.tables.t_account.key-generate-strategy.key-generator-name=snowflakespring.shardingsphere.props.sql.show=true#eureka.client.serviceUrl.defaultZone=http://139.9.179.180:8761/eureka,http://139.9.179.180:8762/eureka